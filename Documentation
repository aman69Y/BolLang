=======================================
🧾 BolLang Documentation
=======================================

📌 Overview:
BolLang is a lightweight, browser-based, Hindi-syntax-inspired programming language built on top of JavaScript. It’s ideal for beginners, meme-loving coders, and educational purposes.

📦 How It Works:
- Include BolLang via CDN
- Write code inside <script type="text/bollang">
- BolLang transpiles it into JavaScript and runs it

🔧 CDN Usage:
<script src="https://cdn.jsdelivr.net/gh/aman69Y/BolLang/"></script>

📄 Language Syntax:
---------------------------------------
✅ Print:
  bolna("Hello");          // console.log("Hello")

✅ Variables:
  banao x = 10;            // let x = 10;
  x = x + 1;

✅ Data Types:
  banao naam = "Aman";     // string
  banao umar = 14;         // number
  banao sachHai = sach;    // boolean true
  banao fake = jhuth;      // boolean false

✅ Operators:
  aur -> &&
  ya -> ||
  nahi -> !

✅ Conditionals:
  agar (x > 5) {
    bolna("Bada hai");
  } nahi_to {
    bolna("Chhota ya barabar hai");
  }

✅ Loops:
  banao i = 0;
  jab_tak (i < 3) {
    bolna(i);
    i = i + 1;
  }

✅ Jump Statements:
  rukja();                 // break
  agla();                  // continue

✅ Functions:
  kaam greet(naam) {
    bolna("Hello, " + naam);
  }

  greet("Aman");

✅ Comments:
  // This is a comment (JS-style)

🔐 Error Handling:
BolLang wraps user code inside try/catch and prints errors in the console with the tag "BolLang Error".

🧱 Advanced Topics:
---------------------------------------
🔹 Abstraction:
Using functions like `kaam` hides complexity. For example:

  kaam dikhado(msg) {
    bolna("Screen pe: " + msg);
  }
  dikhado("Welcome");

🔹 Future Ideas:
- Arrays, Dictionaries
- User-defined Modules
- Built-in REPL or Playground

📘 Sample Program:
<script type="text/bollang">
  banao naam = "Aman";
  kaam greet(who) {
    bolna("Namaste, " + who);
  }

  greet(naam);
</script>

Made with ❤️ by Aman
*/
